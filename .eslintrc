{
  "plugins": ["react", "@typescript-eslint", "testing-library", "jest-dom"],
  "extends": [
    "eslint:recommended",
    "plugin:react-hooks/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:testing-library/react",
    "plugin:jest-dom/recommended"
  ],
  "settings": {
    "react": {
      "version": "18.2.0"
    },
    "import/ignore": ["node_modules"]
  },
  "env": {
    "browser": true,
    "es6": true
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 6,
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "ignorePatterns": ["node_modules/", "dist/"],
  "rules": {
    "no-console": "warn",
    "semi": ["error", "always"],
    "indent": ["error", 2],
    "eol-last": ["error", "always"],
    "react/jsx-closing-bracket-location": [1, "after-props"],
    "no-param-reassign": [
      "error",
      { "props": true, "ignorePropertyModificationsFor": ["state"] }
    ],
    "key-spacing": [
      "warn",
      {
        "beforeColon": false
      }
    ],
    "keyword-spacing": [
      "warn",
      {
        "before": true,
        "after": true
      }
    ],
    "react/function-component-definition": [
      "error",
      {
        "namedComponents": "arrow-function",
        "unnamedComponents": "arrow-function"
      }
    ],
    "padding-line-between-statements": [
      "error",
      {
        "blankLine": "always",
        "prev": ["const", "let", "var"],
        "next": "*"
      },
      {
        "blankLine": "any",
        "prev": ["const", "let", "var"],
        "next": ["const", "let", "var"]
      }
    ], // require newline after const, let, var declarations
    "@typescript-eslint/array-type": "error",
    "@typescript-eslint/explicit-function-return-type": "warn",
    "@typescript-eslint/no-empty-function": "error",
    "@typescript-eslint/type-annotation-spacing": [
      "error",
      {
        "before": true,
        "after": true,
        "overrides": {
          "colon": { "before": false, "after": true }
        }
      }
    ],
    "@typescript-eslint/consistent-type-definitions": ["error", "interface"],
    "@typescript-eslint/member-delimiter-style": "error",
    "@typescript-eslint/no-unused-vars": "error",
    "@typescript-eslint/typedef": [
      "error",
      {
        "arrowParameter": false,
        "memberVariableDeclaration": true,
        "parameter": true,
        "propertyDeclaration": true
      }
    ]
  }
}
